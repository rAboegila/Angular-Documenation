var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.258,1,0.721]],["body/components/AppComponent.html",[0,0.404,1,1.206,2,1.392,3,0.511,4,0.444,5,1.153,6,1.153,7,1.153,8,1.153,9,0.444,10,2.461,11,1.153,12,2.146,13,1.925,14,2.467,15,1.552,16,4.575,17,1.552,18,4.047,19,0.582,20,0.997,21,2.462,22,0.659,23,0.042,24,1.287,25,1.153,26,1.034,27,3.312,28,1.034,29,3.007,30,0.659,31,0.582,32,0.511,33,0.659,34,1.153,35,1.552,36,1.552,37,1.153,38,1.877,39,1.153,40,0.997,41,1.153,42,0.659,43,1.153,44,0.659,45,1.153,46,0.659,47,1.153,48,0.659,49,1.153,50,0.741,51,1.153,52,0.659,53,0.511,54,1.153,55,0.659,56,0.927,57,1.153,58,1.153,59,0.029,60,0.029]],["title/modules/AppModule.html",[61,2.395,62,1.784]],["body/modules/AppModule.html",[1,1.349,3,0.41,4,0.356,9,0.356,13,0.829,23,0.043,30,1.21,31,0.467,32,0.41,33,0.528,42,1.075,44,1.075,46,1.075,48,1.075,50,1.209,52,1.075,53,0.41,55,1.075,59,0.025,60,0.025,62,3.532,63,1.298,64,2.116,65,1.974,66,1.974,67,1.974,68,1.974,69,2.641,70,2.841,71,1.974,72,1.47,73,2.412,74,3.471,75,2.841,76,2.841,77,2.841,78,3.471,79,1.974,80,1.685,81,3.471,82,1.685,83,2.412,84,2.412,85,2.412,86,1.974,87,1.47,88,1.974,89,1.974,90,1.974,91,3.471,92,3.471,93,1.47,94,1.974,95,1.974,96,2.412]],["title/modules/AppRoutingModule.html",[61,2.395,69,1.575]],["body/modules/AppRoutingModule.html",[0,0.447,3,0.497,4,0.432,9,0.432,23,0.043,30,1.206,31,0.566,32,0.497,33,0.641,42,0.87,44,0.641,46,0.87,48,0.87,52,0.87,53,0.497,55,0.87,56,0.902,59,0.029,60,0.029,63,1.574,69,2.138,75,2.394,77,3.251,86,2.394,87,1.783,88,2.394,89,2.394,90,2.394,94,2.394,95,2.394,97,2.925,98,2.925,99,3.972,100,2.749,101,1.252,102,2.749,103,2.925,104,2.044,105,5.338,106,3.972,107,2.138,108,3.972,109,3.972,110,1.783,111,2.925,112,2.925,113,3.251,114,2.925,115,2.925,116,2.925]],["title/guards/AuthGuard.html",[102,1.784,117,2.045]],["body/guards/AuthGuard.html",[3,0.497,4,0.432,9,0.432,14,1.783,19,0.566,22,0.87,23,0.043,28,1.366,30,1.06,31,0.566,32,0.497,33,0.641,40,0.979,59,0.029,60,0.029,101,1.252,102,2.421,107,1.574,113,4.141,118,2.925,119,2.394,120,1.523,121,1.121,122,2.044,123,2.071,124,2.749,125,2.949,126,2.925,127,1.7,128,1.7,129,2.776,130,2.925,131,4.839,132,4.511,133,4.839,134,2.925,135,3.972,136,1.121,137,4.511,138,3.972,139,1.902,140,4.511,141,1.902,142,1.783,143,1.783,144,2.044,145,2.394,146,1.252,147,1.574,148,2.925,149,2.776,150,2.044,151,2.925,152,2.925,153,2.044,154,1.783]],["title/components/LoginComponent.html",[0,0.258,42,0.641]],["body/components/LoginComponent.html",[0,0.352,1,0.574,2,1.164,3,0.396,4,0.344,5,0.893,6,0.893,7,0.893,8,0.893,9,0.344,11,0.893,12,2.036,13,1.826,15,1.298,17,1.298,19,0.451,20,0.834,22,0.873,23,0.043,24,1.873,25,1.298,26,1.164,28,1.505,30,0.959,31,0.451,32,0.396,33,0.51,34,0.893,35,1.298,36,1.298,37,0.893,38,1.678,39,0.893,40,0.982,41,0.893,42,0.959,43,0.893,44,0.51,45,0.893,46,0.51,47,0.893,48,0.51,49,0.893,50,0.574,51,0.893,52,0.51,53,0.396,54,0.893,55,0.51,56,1.044,57,0.893,58,0.893,59,0.024,60,0.024,93,1.42,101,0.997,107,2.76,120,1.298,121,0.893,122,1.628,123,1.873,124,2.431,125,2.668,127,0.997,128,0.997,129,2.366,136,0.893,143,1.42,146,0.997,147,1.254,153,1.628,155,1.907,156,3.988,157,3.386,158,2.61,159,2.61,160,3.386,161,2.33,162,0.997,163,2.33,164,2.33,165,2.33,166,2.33,167,2.33,168,2.33,169,1.628,170,2.33,171,2.33,172,1.907]],["title/components/NavbarComponent.html",[0,0.258,44,0.641]],["body/components/NavbarComponent.html",[0,0.323,1,0.495,2,1.043,3,0.341,4,0.297,5,0.77,6,0.77,7,0.77,8,0.77,9,0.297,11,0.77,12,1.965,13,1.762,15,1.163,17,1.163,19,0.389,20,0.747,22,0.8,23,0.043,25,0.77,26,0.691,28,1.689,30,0.957,31,0.389,32,0.341,33,0.44,34,0.77,35,1.163,36,1.163,37,0.77,38,1.561,39,0.77,40,0.9,41,0.77,42,0.44,43,0.77,44,0.892,45,0.77,46,0.44,47,0.77,48,0.44,49,0.77,50,0.495,51,0.77,52,0.44,53,0.341,54,0.77,55,0.44,56,0.619,57,0.77,58,0.77,59,0.022,60,0.022,72,1.849,101,0.86,107,1.633,110,2.801,120,1.163,121,0.77,123,1.742,124,2.228,125,2.482,127,0.86,128,0.86,136,1.676,139,1.452,143,1.225,146,0.86,147,1.633,153,1.404,154,1.849,162,1.87,173,1.644,174,3.034,175,3.655,176,3.034,177,3.655,178,1.967,179,3.332,180,4.072,181,4.072,182,4.072,183,2.009,184,3.655,185,2.191,186,3.034,187,3.034,188,2.009,189,2.009,190,2.009,191,2.009,192,2.009,193,2.009,194,0.962,195,1.225,196,1.644,197,2.009,198,2.009,199,2.12,200,2.009,201,2.009,202,2.009,203,2.009,204,2.009,205,2.009,206,2.009,207,2.009,208,2.009,209,2.009,210,3.034,211,3.034,212,2.009,213,2.009,214,2.009,215,2.009,216,3.034,217,2.009]],["title/components/NotfoundComponent.html",[0,0.258,46,0.641]],["body/components/NotfoundComponent.html",[0,0.413,1,0.775,2,1.434,3,0.534,4,0.464,5,1.206,6,1.206,7,1.206,8,1.206,9,0.464,11,1.206,12,2.164,13,1.941,15,1.599,17,1.599,23,0.041,30,0.689,31,0.609,32,0.534,33,0.689,34,1.206,35,1.599,36,1.599,37,1.206,38,1.911,39,1.206,40,1.027,41,1.206,42,0.689,43,1.206,44,0.689,45,1.206,46,1.091,47,1.206,48,0.689,49,1.206,50,0.775,51,1.206,52,0.689,53,0.534,54,1.206,55,0.689,56,0.969,57,1.206,58,1.206,59,0.03,60,0.03,218,2.573,219,4.983,220,4.679,221,4.17,222,3.413]],["title/components/RegisterComponent.html",[0,0.258,48,0.641]],["body/components/RegisterComponent.html",[0,0.347,1,0.56,2,1.144,3,0.387,4,0.336,5,0.872,6,0.872,7,0.872,8,0.872,9,0.336,11,0.872,12,2.025,13,1.816,15,1.276,17,1.276,19,0.44,20,0.82,22,0.861,23,0.042,28,1.353,30,0.948,31,0.44,32,0.387,33,0.498,34,0.872,35,1.276,36,1.276,37,0.872,38,1.659,39,0.872,40,1.066,41,0.872,42,0.498,43,0.872,44,0.498,45,0.872,46,0.498,47,0.872,48,0.948,49,0.872,50,0.56,51,0.872,52,0.498,53,0.387,54,0.872,55,0.498,56,0.701,57,0.872,58,0.872,59,0.024,60,0.024,93,1.387,101,0.974,110,2.638,120,1.276,121,0.872,122,1.59,123,1.852,124,2.397,125,2.638,127,1.424,128,1.424,129,2.325,136,0.872,143,1.387,146,0.974,147,1.224,158,2.117,159,2.117,162,0.974,169,1.59,199,1.59,223,1.862,224,3.933,225,3.327,226,4.328,227,3.327,228,3.327,229,3.327,230,4.968,231,2.275,232,2.275,233,2.275,234,2.275,235,2.072,236,3.933,237,3.933,238,2.275,239,2.275,240,2.275,241,2.275,242,2.275,243,2.275,244,2.397,245,2.275,246,2.275,247,2.275,248,2.275]],["title/interfaces/Todo.html",[53,0.497,249,1.575]],["body/interfaces/Todo.html",[3,0.536,4,0.466,9,0.466,19,0.611,20,1.03,21,2.685,22,1.137,23,0.043,24,2.283,32,0.848,53,0.71,59,0.03,60,0.03,139,2.389,158,1.698,159,1.698,178,1.698,194,1.51,244,1.923,249,2.249,250,2.204,251,1.923,252,3.487,253,3.041,254,3.487,255,3.42,256,3.42,257,3.164,258,3.164,259,2.794,260,2.204,261,2.204,262,3.42,263,1.698]],["title/components/TodoComponent.html",[0,0.258,50,0.721]],["body/components/TodoComponent.html",[0,0.316,1,0.477,2,1.015,3,0.329,4,0.286,5,0.743,6,0.743,7,0.743,8,0.743,9,0.286,11,0.743,12,1.946,13,1.745,15,1.131,17,1.131,19,0.375,20,0.727,22,0.992,23,0.043,25,0.743,26,0.666,28,1.799,30,0.646,31,0.375,32,0.329,33,0.424,34,0.743,35,1.131,36,1.131,37,0.743,38,1.532,39,0.743,40,0.727,41,0.743,42,0.424,43,0.743,44,0.424,45,0.743,46,0.424,47,0.743,48,0.424,49,0.743,50,0.984,51,0.743,52,0.424,53,0.845,54,0.743,55,0.424,56,0.597,57,0.743,58,0.743,59,0.021,60,0.021,120,1.131,121,1.37,136,1.649,139,0.927,150,1.353,154,1.798,162,1.84,195,1.18,235,1.913,259,1.588,264,1.585,265,3.573,266,2.95,267,2.95,268,3.573,269,3.573,270,3.573,271,3.573,272,4.3,273,2.95,274,2.95,275,3.573,276,3.573,277,3.573,278,3.573,279,2.95,280,1.936,281,4.975,282,1.936,283,1.936,284,1.936,285,1.936,286,1.936,287,1.936,288,1.936,289,1.936,290,1.936,291,1.936,292,4.3,293,1.936,294,1.936,295,1.936,296,1.936,297,1.936,298,1.936,299,1.936,300,1.936,301,1.936,302,1.936,303,1.936,304,1.936,305,4.531,306,4.531,307,2.95,308,2.95,309,2.95,310,3.996,311,2.95,312,2.95,313,2.95]],["title/components/TodoDetailsComponent.html",[0,0.258,52,0.641]],["body/components/TodoDetailsComponent.html",[0,0.406,1,0.748,2,1.401,3,0.516,4,0.448,5,1.164,6,1.164,7,1.164,8,1.164,9,0.448,11,1.164,12,2.15,13,1.928,15,1.562,17,1.562,23,0.041,30,0.665,31,0.588,32,0.516,33,0.665,34,1.164,35,1.562,36,1.562,37,1.164,38,1.884,39,1.164,40,1.003,41,1.164,42,0.665,43,1.164,44,0.665,45,1.164,46,0.665,47,1.164,48,0.665,49,1.164,50,0.748,51,1.164,52,1.076,53,0.953,54,1.164,55,0.665,56,0.936,57,1.164,58,1.164,59,0.029,60,0.029,87,1.85,222,3.333,314,2.484,315,2.484,316,4.913,317,4.597,318,4.073]],["title/components/TodosComponent.html",[0,0.258,55,0.641]],["body/components/TodosComponent.html",[0,0.302,1,0.444,2,0.96,3,0.306,4,0.266,5,0.691,6,0.691,7,0.691,8,0.691,9,0.266,11,0.691,12,1.909,13,1.712,15,1.07,17,1.07,19,0.349,20,0.688,21,1.502,22,0.964,23,0.043,24,1.781,25,1.07,26,0.96,28,1.579,30,0.843,31,0.349,32,0.306,33,0.395,34,0.691,35,1.07,36,1.07,37,0.691,38,1.475,39,0.691,40,1.026,41,0.691,42,0.395,43,0.691,44,0.395,45,0.691,46,0.395,47,0.691,48,0.395,49,0.691,50,0.444,51,0.691,52,0.395,53,0.78,54,0.691,55,0.843,56,1.358,57,0.691,58,0.691,59,0.02,60,0.02,101,0.771,104,1.259,120,1.07,121,0.691,127,1.462,128,1.462,136,1.31,146,0.771,147,0.97,162,1.647,169,1.259,172,2.285,185,2.071,194,1.842,195,1.098,196,1.475,199,1.259,252,1.951,253,2.684,257,1.098,258,1.098,259,0.97,263,2.37,319,1.475,320,3.417,321,2.792,322,3.417,323,3.149,324,2.792,325,2.285,326,1.802,327,3.417,328,3.848,329,2.792,330,2.792,331,1.802,332,2.792,333,1.802,334,1.475,335,2.792,336,1.802,337,2.285,338,1.802,339,1.802,340,1.802,341,1.802,342,1.802,343,1.802,344,1.802,345,1.802,346,2.792,347,1.802,348,2.792,349,1.802,350,1.802,351,1.802,352,1.802,353,1.802,354,1.802,355,1.802,356,1.475,357,2.797,358,3.848,359,1.802,360,3.417,361,1.802,362,1.802,363,1.802,364,1.802,365,1.802,366,1.802,367,1.802,368,1.802,369,2.285]],["title/injectables/TodosService.html",[141,1.401,185,1.575]],["body/injectables/TodosService.html",[3,0.31,4,0.269,9,0.269,14,1.111,19,0.353,20,0.694,21,0.981,22,1.094,23,0.043,24,1.473,25,1.08,26,0.969,28,1.717,30,0.916,31,0.353,32,0.31,33,0.399,40,1.136,53,0.928,56,0.562,59,0.02,60,0.02,82,1.274,120,1.08,121,0.699,127,1.973,128,1.973,136,1.768,141,1.348,142,1.111,144,1.274,146,0.78,149,3.416,162,1.205,185,1.516,194,2.208,195,1.111,235,2.004,253,2.811,254,2.405,260,2.405,263,2.083,323,2.305,325,3.168,334,1.492,337,3.425,356,1.492,357,3.168,370,1.274,371,1.492,372,2.816,373,2.816,374,2.816,375,2.816,376,2.816,377,1.492,378,3.168,379,2.816,380,2.305,381,2.816,382,1.823,383,2.816,384,2.816,385,1.823,386,2.816,387,1.823,388,1.823,389,2.816,390,1.823,391,2.816,392,3.871,393,1.823,394,2.816,395,1.823,396,2.816,397,1.823,398,2.816,399,1.492,400,1.111,401,1.492,402,3.168,403,1.823,404,2.817,405,3.441,406,3.441,407,3.441,408,2.817,409,1.823,410,1.823,411,1.823,412,1.823,413,2.816,414,1.823,415,1.823,416,1.823,417,1.823,418,3.871,419,1.823,420,1.823,421,1.823,422,1.823,423,1.823]],["title/interfaces/User.html",[178,1.575,249,1.575]],["body/interfaces/User.html",[3,0.516,4,0.448,9,0.448,19,0.588,20,1.003,21,1.633,22,1.122,23,0.043,24,2.399,32,0.835,53,0.516,59,0.029,60,0.029,139,2.526,158,2.644,159,2.644,178,2.192,194,1.453,244,2.995,249,2.192,250,2.121,251,1.85,252,2.121,253,1.85,254,3.433,256,3.333,257,3.123,258,3.123,259,2.758,260,3.433,261,3.433,262,3.333,263,1.633]],["title/injectables/UsersService.html",[123,1.252,141,1.401]],["body/injectables/UsersService.html",[3,0.394,4,0.342,9,0.342,14,1.413,19,0.449,20,0.831,22,1.016,23,0.043,24,2.234,25,1.294,26,1.16,28,1.796,30,0.956,31,0.449,32,0.394,33,0.508,40,0.98,59,0.024,60,0.024,82,1.62,104,1.62,107,1.816,110,2.056,120,1.294,121,0.889,123,1.444,127,1.702,128,1.702,136,1.857,139,1.615,141,1.615,142,1.413,144,1.62,146,0.992,149,3.052,158,2.497,159,2.14,162,1.444,179,3.574,235,1.904,244,1.413,255,2.761,261,3.384,370,1.62,377,1.898,378,3.574,380,2.761,399,1.898,400,1.413,401,1.898,402,1.898,404,1.898,408,1.898,424,1.898,425,4.367,426,4.367,427,4.367,428,3.374,429,2.319,430,2.319,431,2.319,432,3.374,433,2.319,434,2.319,435,3.374,436,2.319,437,3.374,438,3.374,439,2.319,440,3.374,441,2.319,442,2.319,443,2.319,444,2.319,445,2.319,446,3.374,447,3.374,448,2.319,449,2.319]],["title/coverage.html",[450,3.252]],["body/coverage.html",[0,0.487,1,0.767,9,0.46,10,2.548,22,0.682,23,0.042,42,0.682,44,0.682,46,0.682,48,0.682,50,0.767,52,0.682,53,0.529,55,0.682,59,0.03,60,0.03,87,1.898,102,1.898,117,2.176,119,2.548,123,1.332,141,1.984,155,2.548,173,2.548,178,1.676,185,1.676,218,2.548,223,2.548,235,1.491,249,2.23,251,2.525,264,2.548,314,2.548,315,2.548,319,2.548,371,2.548,400,2.525,424,2.548,450,2.548,451,3.114,452,3.114,453,3.114,454,5.807,455,3.114,456,3.114,457,4.143,458,3.114,459,3.114,460,3.114,461,4.964,462,3.114,463,3.114,464,3.114,465,3.114,466,2.548,467,4.143,468,2.548,469,3.114,470,3.114]],["title/dependencies.html",[64,2.142,471,1.715]],["body/dependencies.html",[23,0.043,31,0.722,59,0.033,60,0.033,64,2.273,76,3.809,79,3.809,80,3.252,93,2.273,101,1.596,142,2.273,472,3.729,473,5.718,474,3.729,475,3.729,476,3.729,477,3.729,478,3.729,479,3.729,480,3.729,481,3.729,482,3.729,483,3.729,484,3.729,485,3.729,486,3.729,487,3.729,488,3.729]],["title/miscellaneous/enumerations.html",[489,1.495,490,2.876]],["body/miscellaneous/enumerations.html",[19,0.763,23,0.042,26,1.968,59,0.035,60,0.035,194,2.306,251,2.403,257,3.302,258,3.302,259,2.916,263,2.592,489,2.403,490,3.227,491,4.817]],["title/index.html",[19,0.475,492,2.454,493,2.454]],["body/index.html",[0,0.41,4,0.457,23,0.03,27,2.532,40,0.762,59,0.03,60,0.03,72,1.886,145,2.532,235,1.481,369,2.532,471,2.162,494,4.125,495,3.094,496,4.641,497,4.641,498,2.532,499,3.094,500,3.094,501,4.125,502,5.157,503,5.415,504,3.094,505,3.094,506,3.094,507,3.094,508,3.094,509,3.094,510,3.094,511,3.094,512,3.094,513,3.094,514,3.094,515,4.641,516,4.641,517,3.094,518,4.951,519,3.094,520,3.094,521,3.094,522,3.094,523,4.125,524,4.125,525,4.951,526,3.094,527,4.125,528,4.125,529,3.094,530,5.305,531,3.094,532,3.094,533,3.094,534,4.125,535,3.094,536,3.094,537,3.094,538,3.094,539,3.094,540,4.641,541,3.094,542,3.094,543,3.094,544,2.162,545,3.094,546,3.094,547,3.094]],["title/modules.html",[63,2.139]],["body/modules.html",[23,0.037,59,0.037,60,0.037,62,2.689,63,2.374,69,2.374,80,3.083,548,4.412,549,4.412,550,5.152,551,4.412,552,4.412]],["title/overview.html",[544,2.777]],["body/overview.html",[1,1.354,2,1.129,23,0.041,42,1.047,44,1.047,46,1.047,48,1.047,50,1.178,52,1.047,55,1.047,59,0.031,60,0.031,62,3.62,63,1.767,64,2.615,65,2.687,66,2.687,67,2.687,68,2.687,69,2.572,70,3.512,71,2.687,72,2.001,100,2.001,117,2.295,250,2.295,370,2.295,544,2.295,553,4.78,554,3.284,555,3.284,556,3.284]],["title/properties.html",[20,0.866,471,1.715]],["body/properties.html",[20,1.118,23,0.04,59,0.038,60,0.038,498,3.713,557,4.537]],["title/routes.html",[100,2.422]],["body/routes.html",[23,0.038,59,0.038,60,0.038,100,2.805]],["title/miscellaneous/variables.html",[489,1.495,558,2.876]],["body/miscellaneous/variables.html",[19,0.766,22,1.058,23,0.042,25,1.852,26,1.661,59,0.035,60,0.035,150,2.766,154,2.413,400,3.307,466,3.24,468,3.24,489,2.413,558,3.24,559,3.959,560,3.959,561,4.829,562,4.829,563,4.829,564,4.829]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":557,"title":{},"body":{"properties.html":{}}}],["0.12.0",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":217,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0/1",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":555,"title":{},"body":{"overview.html":{}}}],["1.1.19",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["1.10.3",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["15.2.0",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["15.2.4",{"_index":499,"title":{},"body":{"index.html":{}}}],["2",{"_index":553,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["209",{"_index":216,"title":{},"body":{"components/NavbarComponent.html":{}}}],["5.2.3",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":556,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":554,"title":{},"body":{"overview.html":{}}}],["9",{"_index":242,"title":{},"body":{"components/RegisterComponent.html":{}}}],["_activatedroute",{"_index":327,"title":{},"body":{"components/TodosComponent.html":{}}}],["_http",{"_index":380,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["_id",{"_index":252,"title":{},"body":{"interfaces/Todo.html":{},"components/TodosComponent.html":{},"interfaces/User.html":{}}}],["_router",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["_todoservice",{"_index":184,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_todosservice",{"_index":330,"title":{},"body":{"components/TodosComponent.html":{}}}],["_userservice",{"_index":187,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_usersservice",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["activatedroute",{"_index":328,"title":{},"body":{"components/TodosComponent.html":{}}}],["activatedroutesnapshot",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["add",{"_index":369,"title":{},"body":{"components/TodosComponent.html":{},"index.html":{}}}],["addtodo",{"_index":323,"title":{},"body":{"components/TodosComponent.html":{},"injectables/TodosService.html":{}}}],["addtodo(todotitle",{"_index":381,"title":{},"body":{"injectables/TodosService.html":{}}}],["alert('please",{"_index":170,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert('you",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{}}}],["angular",{"_index":496,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["angular/compiler",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":101,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodosComponent.html":{},"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["app.component",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":508,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":406,"title":{},"body":{"injectables/TodosService.html":{}}}],["appmodule",{"_index":62,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":69,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":519,"title":{},"body":{"index.html":{}}}],["auth.guard",{"_index":103,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authenticateuser",{"_index":425,"title":{},"body":{"injectables/UsersService.html":{}}}],["authguard",{"_index":102,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authorization",{"_index":407,"title":{},"body":{"injectables/TodosService.html":{}}}],["automatically",{"_index":509,"title":{},"body":{"index.html":{}}}],["available",{"_index":552,"title":{},"body":{"modules.html":{}}}],["background",{"_index":213,"title":{},"body":{"components/NavbarComponent.html":{}}}],["baseurl",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bees",{"_index":312,"title":{},"body":{"components/TodoComponent.html":{}}}],["behaviorsubject",{"_index":399,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["behaviorsubject(false",{"_index":438,"title":{},"body":{"injectables/UsersService.html":{}}}],["behaviorsubject(todofilter.all",{"_index":396,"title":{},"body":{"injectables/TodosService.html":{}}}],["boolean",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavbarComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["bootstrap",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["break",{"_index":360,"title":{},"body":{"components/TodosComponent.html":{}}}],["browse",{"_index":550,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":518,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":113,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capabilities",{"_index":538,"title":{},"body":{"index.html":{}}}],["case",{"_index":357,"title":{},"body":{"components/TodosComponent.html":{},"injectables/TodosService.html":{}}}],["change",{"_index":511,"title":{},"body":{"index.html":{}}}],["check",{"_index":543,"title":{},"body":{"index.html":{}}}],["choice",{"_index":533,"title":{},"body":{"index.html":{}}}],["class",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["cli",{"_index":497,"title":{},"body":{"index.html":{}}}],["close",{"_index":310,"title":{},"body":{"components/TodoComponent.html":{}}}],["cluster_appmodule",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":513,"title":{},"body":{"index.html":{}}}],["color",{"_index":214,"title":{},"body":{"components/NavbarComponent.html":{}}}],["command",{"_index":534,"title":{},"body":{"index.html":{}}}],["completed",{"_index":257,"title":{},"body":{"interfaces/Todo.html":{},"components/TodosComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["completetodo",{"_index":268,"title":{},"body":{"components/TodoComponent.html":{}}}],["completetodo():void",{"_index":299,"title":{},"body":{"components/TodoComponent.html":{}}}],["completetodoevent",{"_index":275,"title":{},"body":{"components/TodoComponent.html":{}}}],["compodoc/compodoc",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"overview.html":{}}}],["confirmremovetodo",{"_index":269,"title":{},"body":{"components/TodoComponent.html":{}}}],["confirmremovetodo():void",{"_index":295,"title":{},"body":{"components/TodoComponent.html":{}}}],["console.log(\"toggle\",selectedtodo",{"_index":412,"title":{},"body":{"injectables/TodosService.html":{}}}],["console.log(err",{"_index":172,"title":{},"body":{"components/LoginComponent.html":{},"components/TodosComponent.html":{}}}],["console.log(err.error",{"_index":248,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(regform.value",{"_index":245,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(selectedtodo",{"_index":355,"title":{},"body":{"components/TodosComponent.html":{}}}],["console.log(value",{"_index":367,"title":{},"body":{"components/TodosComponent.html":{}}}],["const",{"_index":104,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TodosComponent.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["constructor(_http",{"_index":377,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["constructor(_todosservice",{"_index":326,"title":{},"body":{"components/TodosComponent.html":{}}}],["constructor(_userservice",{"_index":183,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(_usersservice",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(private",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["content",{"_index":405,"title":{},"body":{"injectables/TodosService.html":{}}}],["coverage",{"_index":450,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["declarations",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":306,"title":{},"body":{"components/TodoComponent.html":{}}}],["deleted",{"_index":259,"title":{},"body":{"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["deletetodoevent",{"_index":276,"title":{},"body":{"components/TodoComponent.html":{}}}],["deletetodopermanent",{"_index":372,"title":{},"body":{"injectables/TodosService.html":{}}}],["deletetodopermanent(todo",{"_index":384,"title":{},"body":{"injectables/TodosService.html":{}}}],["dependencies",{"_index":64,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["details",{"_index":316,"title":{},"body":{"components/TodoDetailsComponent.html":{}}}],["details'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["details.component",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["details.component.css",{"_index":317,"title":{},"body":{"components/TodoDetailsComponent.html":{}}}],["details.component.html",{"_index":318,"title":{},"body":{"components/TodoDetailsComponent.html":{}}}],["details.component.ts",{"_index":315,"title":{},"body":{"components/TodoDetailsComponent.html":{},"coverage.html":{}}}],["details/todo",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TodoDetailsComponent.html":{},"coverage.html":{}}}],["dev",{"_index":505,"title":{},"body":{"index.html":{}}}],["development",{"_index":500,"title":{},"body":{"index.html":{}}}],["directive",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["directives",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":517,"title":{},"body":{"index.html":{}}}],["directory",{"_index":522,"title":{},"body":{"index.html":{}}}],["dist",{"_index":521,"title":{},"body":{"index.html":{}}}],["docheck",{"_index":340,"title":{},"body":{"components/TodosComponent.html":{}}}],["documentation",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["dynamic",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":531,"title":{},"body":{"index.html":{}}}],["edittodostatus",{"_index":324,"title":{},"body":{"components/TodosComponent.html":{}}}],["edittodostatus(selectedtodo",{"_index":332,"title":{},"body":{"components/TodosComponent.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["end",{"_index":530,"title":{},"body":{"index.html":{}}}],["enter",{"_index":171,"title":{},"body":{"components/LoginComponent.html":{}}}],["enum",{"_index":262,"title":{},"body":{"interfaces/Todo.html":{},"interfaces/User.html":{}}}],["enumerations",{"_index":490,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":400,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":169,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TodosComponent.html":{}}}],["error",{"_index":354,"title":{},"body":{"components/TodosComponent.html":{}}}],["error(err",{"_index":368,"title":{},"body":{"components/TodosComponent.html":{}}}],["eventemitter",{"_index":281,"title":{},"body":{"components/TodoComponent.html":{}}}],["execute",{"_index":527,"title":{},"body":{"index.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":116,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["false",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavbarComponent.html":{},"components/TodoComponent.html":{},"miscellaneous/variables.html":{}}}],["favourite",{"_index":258,"title":{},"body":{"interfaces/Todo.html":{},"components/TodosComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["favouritetodoevent",{"_index":277,"title":{},"body":{"components/TodoComponent.html":{}}}],["favtodo",{"_index":270,"title":{},"body":{"components/TodoComponent.html":{}}}],["favtodo():void",{"_index":301,"title":{},"body":{"components/TodoComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":512,"title":{},"body":{"index.html":{}}}],["filter",{"_index":337,"title":{},"body":{"components/TodosComponent.html":{},"injectables/TodosService.html":{}}}],["filtertodo",{"_index":373,"title":{},"body":{"injectables/TodosService.html":{}}}],["filtertodo(todos",{"_index":386,"title":{},"body":{"injectables/TodosService.html":{}}}],["first",{"_index":536,"title":{},"body":{"index.html":{}}}],["formcontrol",{"_index":232,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formcontrol(null",{"_index":236,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formgroup",{"_index":230,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["formvalues",{"_index":437,"title":{},"body":{"injectables/UsersService.html":{}}}],["full",{"_index":109,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":539,"title":{},"body":{"index.html":{}}}],["generate",{"_index":515,"title":{},"body":{"index.html":{}}}],["generated",{"_index":495,"title":{},"body":{"index.html":{}}}],["getting",{"_index":492,"title":{"index.html":{}},"body":{}}],["gettodos",{"_index":325,"title":{},"body":{"components/TodosComponent.html":{},"injectables/TodosService.html":{}}}],["gettodos(filter",{"_index":335,"title":{},"body":{"components/TodosComponent.html":{}}}],["getuser",{"_index":426,"title":{},"body":{"injectables/UsersService.html":{}}}],["go",{"_index":542,"title":{},"body":{"index.html":{}}}],["graph",{"_index":551,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":117,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":118,"title":{},"body":{"guards/AuthGuard.html":{}}}],["headers",{"_index":404,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["help",{"_index":540,"title":{},"body":{"index.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["http://localhost:3000",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":507,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":378,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["httpclientmodule",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":402,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["httpheaders().set(\"authorization",{"_index":448,"title":{},"body":{"injectables/UsersService.html":{}}}],["httpoptions",{"_index":447,"title":{},"body":{"injectables/UsersService.html":{}}}],["icons",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":260,"title":{},"body":{"interfaces/Todo.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{}}}],["identifier",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":141,"title":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":370,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["input",{"_index":291,"title":{},"body":{"components/TodoComponent.html":{}}}],["input()todo!:todo",{"_index":294,"title":{},"body":{"components/TodoComponent.html":{}}}],["inputs",{"_index":273,"title":{},"body":{"components/TodoComponent.html":{}}}],["interface",{"_index":249,"title":{"interfaces/Todo.html":{},"interfaces/User.html":{}},"body":{"interfaces/Todo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":250,"title":{},"body":{"interfaces/Todo.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isloggedin",{"_index":427,"title":{},"body":{"injectables/UsersService.html":{}}}],["islogin",{"_index":177,"title":{},"body":{"components/NavbarComponent.html":{}}}],["item",{"_index":309,"title":{},"body":{"components/TodoComponent.html":{}}}],["karma",{"_index":529,"title":{},"body":{"index.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["lib",{"_index":195,"title":{},"body":{"components/NavbarComponent.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{}}}],["literal",{"_index":255,"title":{},"body":{"interfaces/Todo.html":{},"injectables/UsersService.html":{}}}],["localstorage.getitem('token",{"_index":408,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["localstorage.setitem('token',res.token",{"_index":168,"title":{},"body":{"components/LoginComponent.html":{}}}],["log",{"_index":210,"title":{},"body":{"components/NavbarComponent.html":{}}}],["logged",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loggedin",{"_index":261,"title":{},"body":{"interfaces/Todo.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["login",{"_index":107,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UsersService.html":{}}}],["login'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["login(username",{"_index":432,"title":{},"body":{"injectables/UsersService.html":{}}}],["login.component.css",{"_index":156,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":157,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":42,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":179,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UsersService.html":{}}}],["matching",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["methods",{"_index":120,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":489,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":61,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{}}],["modules",{"_index":63,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":541,"title":{},"body":{"index.html":{}}}],["mynav",{"_index":212,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mytodolist",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["navbar",{"_index":174,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["navbar.component.css",{"_index":175,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":176,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["navbarcomponent",{"_index":44,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":506,"title":{},"body":{"index.html":{}}}],["need",{"_index":535,"title":{},"body":{"index.html":{}}}],["new",{"_index":235,"title":{},"body":{"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["newtodotitle",{"_index":322,"title":{},"body":{"components/TodosComponent.html":{}}}],["next",{"_index":346,"title":{},"body":{"components/TodosComponent.html":{}}}],["next(value",{"_index":366,"title":{},"body":{"components/TodosComponent.html":{}}}],["ng",{"_index":503,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":164,"title":{},"body":{"components/LoginComponent.html":{}}}],["ngmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["notfound",{"_index":219,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["notfound.component.css",{"_index":220,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound.component.html",{"_index":221,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound/notfound.component",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["notfoundcomponent",{"_index":46,"title":{"components/NotfoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["number",{"_index":254,"title":{},"body":{"interfaces/Todo.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{}}}],["object",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{}}}],["onchanges",{"_index":341,"title":{},"body":{"components/TodosComponent.html":{}}}],["opendeletemodal",{"_index":267,"title":{},"body":{"components/TodoComponent.html":{}}}],["opendeletemodal:boolean",{"_index":293,"title":{},"body":{"components/TodoComponent.html":{}}}],["optional",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"components/NavbarComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":292,"title":{},"body":{"components/TodoComponent.html":{}}}],["outputs",{"_index":274,"title":{},"body":{"components/TodoComponent.html":{}}}],["overview",{"_index":544,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":471,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":546,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":127,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["password",{"_index":158,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["path",{"_index":105,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":108,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["platform",{"_index":532,"title":{},"body":{"index.html":{}}}],["popper.js",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodosComponent.html":{}}}],["production",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":494,"title":{},"body":{"index.html":{}}}],["promise",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["providedin",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["quote",{"_index":244,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["reactiveformsmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["readonly",{"_index":256,"title":{},"body":{"interfaces/Todo.html":{},"interfaces/User.html":{}}}],["redirectto",{"_index":106,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":545,"title":{},"body":{"index.html":{}}}],["regform",{"_index":226,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register",{"_index":110,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/UsersService.html":{}}}],["register'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["register(formvalues",{"_index":435,"title":{},"body":{"injectables/UsersService.html":{}}}],["register.component.css",{"_index":224,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":225,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":48,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registeruser",{"_index":227,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruser(regform",{"_index":229,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reload",{"_index":510,"title":{},"body":{"index.html":{}}}],["removetodo",{"_index":271,"title":{},"body":{"components/TodoComponent.html":{}}}],["removetodo():void",{"_index":297,"title":{},"body":{"components/TodoComponent.html":{}}}],["res",{"_index":199,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodosComponent.html":{}}}],["res.data",{"_index":352,"title":{},"body":{"components/TodosComponent.html":{}}}],["reset",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":347,"title":{},"body":{"components/TodosComponent.html":{}}}],["result.data",{"_index":349,"title":{},"body":{"components/TodosComponent.html":{}}}],["results",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":149,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["rgba(219",{"_index":215,"title":{},"body":{"components/NavbarComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["route",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["routermodule",{"_index":99,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":100,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":98,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":502,"title":{},"body":{"index.html":{}}}],["running",{"_index":523,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":514,"title":{},"body":{"index.html":{}}}],["selectedtodo",{"_index":334,"title":{},"body":{"components/TodosComponent.html":{},"injectables/TodosService.html":{}}}],["selectedtodo.status[statustype",{"_index":413,"title":{},"body":{"injectables/TodosService.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["serve",{"_index":504,"title":{},"body":{"index.html":{}}}],["server",{"_index":501,"title":{},"body":{"index.html":{}}}],["setfilter",{"_index":374,"title":{},"body":{"injectables/TodosService.html":{}}}],["setfilter(filter",{"_index":389,"title":{},"body":{"injectables/TodosService.html":{}}}],["showcompeleted",{"_index":180,"title":{},"body":{"components/NavbarComponent.html":{}}}],["showdeleted",{"_index":181,"title":{},"body":{"components/NavbarComponent.html":{}}}],["showfav",{"_index":182,"title":{},"body":{"components/NavbarComponent.html":{}}}],["simplechanges",{"_index":342,"title":{},"body":{"components/TodosComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["src/.../environment.prod.ts",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../lib.ts",{"_index":491,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app",{"_index":97,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth.guard.ts",{"_index":119,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth.guard.ts:11",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.guard.ts:9",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/lib.ts",{"_index":251,"title":{},"body":{"interfaces/Todo.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/login/login.component.ts",{"_index":155,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:12",{"_index":163,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:13",{"_index":160,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:18",{"_index":161,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":173,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:13",{"_index":193,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:14",{"_index":186,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:26",{"_index":192,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:30",{"_index":191,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:34",{"_index":190,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:39",{"_index":189,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:42",{"_index":188,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/notfound/notfound.component.ts",{"_index":218,"title":{},"body":{"components/NotfoundComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts",{"_index":223,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:12",{"_index":228,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:21",{"_index":231,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/todo",{"_index":314,"title":{},"body":{"components/TodoDetailsComponent.html":{},"coverage.html":{}}}],["src/app/todo/todo.component.ts",{"_index":264,"title":{},"body":{"components/TodoComponent.html":{},"coverage.html":{}}}],["src/app/todo/todo.component.ts:11",{"_index":279,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:15",{"_index":280,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:16",{"_index":283,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:17",{"_index":282,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:18",{"_index":284,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:19",{"_index":285,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:21",{"_index":287,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:25",{"_index":289,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:29",{"_index":286,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:32",{"_index":288,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:36",{"_index":290,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todos.service.ts",{"_index":371,"title":{},"body":{"injectables/TodosService.html":{},"coverage.html":{}}}],["src/app/todos.service.ts:12",{"_index":397,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:13",{"_index":379,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:17",{"_index":382,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:26",{"_index":388,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:35",{"_index":395,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:44",{"_index":393,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:49",{"_index":390,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:53",{"_index":387,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:69",{"_index":385,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos/todos.component.ts",{"_index":319,"title":{},"body":{"components/TodosComponent.html":{},"coverage.html":{}}}],["src/app/todos/todos.component.ts:12",{"_index":339,"title":{},"body":{"components/TodosComponent.html":{}}}],["src/app/todos/todos.component.ts:13",{"_index":338,"title":{},"body":{"components/TodosComponent.html":{}}}],["src/app/todos/todos.component.ts:14",{"_index":329,"title":{},"body":{"components/TodosComponent.html":{}}}],["src/app/todos/todos.component.ts:22",{"_index":336,"title":{},"body":{"components/TodosComponent.html":{}}}],["src/app/todos/todos.component.ts:31",{"_index":331,"title":{},"body":{"components/TodosComponent.html":{}}}],["src/app/todos/todos.component.ts:44",{"_index":333,"title":{},"body":{"components/TodosComponent.html":{}}}],["src/app/users.service.ts",{"_index":424,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/users.service.ts:11",{"_index":439,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users.service.ts:12",{"_index":428,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users.service.ts:16",{"_index":436,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users.service.ts:20",{"_index":433,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users.service.ts:24",{"_index":431,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users.service.ts:28",{"_index":429,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users.service.ts:32",{"_index":434,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users.service.ts:36",{"_index":430,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/environments/environment.prod",{"_index":401,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["src/environments/environment.prod.ts",{"_index":466,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":468,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":493,"title":{"index.html":{}},"body":{}}],["state",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":253,"title":{},"body":{"interfaces/Todo.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{}}}],["statustype",{"_index":392,"title":{},"body":{"injectables/TodosService.html":{}}}],["stored",{"_index":520,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"interfaces/Todo.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["successfuly",{"_index":313,"title":{},"body":{"components/TodoComponent.html":{}}}],["support",{"_index":548,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":307,"title":{},"body":{"components/TodoComponent.html":{}}}],["svg",{"_index":549,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":356,"title":{},"body":{"components/TodosComponent.html":{},"injectables/TodosService.html":{}}}],["table",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":311,"title":{},"body":{"components/TodoComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["test",{"_index":526,"title":{},"body":{"index.html":{}}}],["testing",{"_index":537,"title":{},"body":{"index.html":{}}}],["tests",{"_index":525,"title":{},"body":{"index.html":{}}}],["this._http.delete(`${environment.baseurl}/todos/${id",{"_index":423,"title":{},"body":{"injectables/TodosService.html":{}}}],["this._http.get(`${environment.baseurl}todos",{"_index":409,"title":{},"body":{"injectables/TodosService.html":{}}}],["this._http.get(`${environment.baseurl}users",{"_index":449,"title":{},"body":{"injectables/UsersService.html":{}}}],["this._http.patch(`${environment.baseurl}todos/${todo._id",{"_index":410,"title":{},"body":{"injectables/TodosService.html":{}}}],["this._http.post(`${environment.baseurl}todos",{"_index":403,"title":{},"body":{"injectables/TodosService.html":{}}}],["this._http.post(`${environment.baseurl}users",{"_index":441,"title":{},"body":{"injectables/UsersService.html":{}}}],["this._http.post(`${environment.baseurl}users/signin",{"_index":442,"title":{},"body":{"injectables/UsersService.html":{}}}],["this._router.navigate",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["this._router.navigate(['/login",{"_index":247,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this._router.navigate(['/register",{"_index":208,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._router.navigate(['/todos/compeleted",{"_index":207,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._router.navigate(['/todos/deleted",{"_index":205,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._router.navigate(['/todos/favourite",{"_index":203,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._todoservice.setfilter(todofilter.completed",{"_index":206,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._todoservice.setfilter(todofilter.deleted",{"_index":204,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._todoservice.setfilter(todofilter.favourite",{"_index":202,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._todosservice.addtodo(this.newtodotitle).subscribe",{"_index":351,"title":{},"body":{"components/TodosComponent.html":{}}}],["this._todosservice.filtertodo(this.todos",{"_index":350,"title":{},"body":{"components/TodosComponent.html":{}}}],["this._todosservice.gettodos().subscribe",{"_index":345,"title":{},"body":{"components/TodosComponent.html":{}}}],["this._todosservice.status$.subscribe((res",{"_index":343,"title":{},"body":{"components/TodosComponent.html":{}}}],["this._todosservice.toggletodostatus(selectedtodo",{"_index":364,"title":{},"body":{"components/TodosComponent.html":{}}}],["this._todosservice.updatetodos(selectedtodo).subscribe",{"_index":365,"title":{},"body":{"components/TodosComponent.html":{}}}],["this._userservice.getuser().subscribe(res",{"_index":200,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._userservice.loggedin$.subscribe((res",{"_index":197,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._userservice.logout",{"_index":209,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._usersservice.authenticateuser",{"_index":167,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._usersservice.isloggedin",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._usersservice.login(this.username",{"_index":165,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._usersservice.register(regform.value).subscribe",{"_index":246,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.completetodoevent.emit(this.todo._id",{"_index":300,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.deletetodoevent.emit(this.todo._id",{"_index":298,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.favouritetodoevent.emit(this.todo._id",{"_index":302,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.gettodos(res",{"_index":344,"title":{},"body":{"components/TodosComponent.html":{}}}],["this.gettodos(this._activatedroute.snapshot.params['status",{"_index":363,"title":{},"body":{"components/TodosComponent.html":{}}}],["this.islogin",{"_index":198,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loggedin.asobservable",{"_index":440,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.loggedin.getvalue",{"_index":443,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.loggedin.next(false",{"_index":445,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.loggedin.next(true",{"_index":444,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.opendeletemodal",{"_index":296,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.password).subscribe((res:any",{"_index":166,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.regform",{"_index":234,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.status.asobservable",{"_index":398,"title":{},"body":{"injectables/TodosService.html":{}}}],["this.status.next(filter",{"_index":414,"title":{},"body":{"injectables/TodosService.html":{}}}],["this.todos",{"_index":348,"title":{},"body":{"components/TodosComponent.html":{}}}],["this.todos.push",{"_index":353,"title":{},"body":{"components/TodosComponent.html":{}}}],["this.todostatus",{"_index":358,"title":{},"body":{"components/TodosComponent.html":{}}}],["this.undodeleteevent.emit(this.todo",{"_index":304,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.user",{"_index":201,"title":{},"body":{"components/NavbarComponent.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{}}}],["todo",{"_index":53,"title":{"interfaces/Todo.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["todo'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["todo.component.css",{"_index":265,"title":{},"body":{"components/TodoComponent.html":{}}}],["todo.component.html",{"_index":266,"title":{},"body":{"components/TodoComponent.html":{}}}],["todo.status",{"_index":411,"title":{},"body":{"injectables/TodosService.html":{}}}],["todo.status.completed",{"_index":417,"title":{},"body":{"injectables/TodosService.html":{}}}],["todo.status.deleted",{"_index":418,"title":{},"body":{"injectables/TodosService.html":{}}}],["todo.status.favourite",{"_index":420,"title":{},"body":{"injectables/TodosService.html":{}}}],["todo.title",{"_index":305,"title":{},"body":{"components/TodoComponent.html":{}}}],["todo/:id",{"_index":114,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["todo/todo.component",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["todocomponent",{"_index":50,"title":{"components/TodoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tododetailscomponent",{"_index":52,"title":{"components/TodoDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["todofilter",{"_index":194,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/Todo.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["todofilter.all",{"_index":422,"title":{},"body":{"injectables/TodosService.html":{}}}],["todofilter.completed",{"_index":416,"title":{},"body":{"injectables/TodosService.html":{}}}],["todofilter.deleted",{"_index":421,"title":{},"body":{"injectables/TodosService.html":{}}}],["todofilter.favourite",{"_index":419,"title":{},"body":{"injectables/TodosService.html":{}}}],["todolist_project",{"_index":547,"title":{},"body":{"index.html":{}}}],["todos",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{}}}],["todos.component.css",{"_index":320,"title":{},"body":{"components/TodosComponent.html":{}}}],["todos.component.html",{"_index":321,"title":{},"body":{"components/TodosComponent.html":{}}}],["todos.filter",{"_index":415,"title":{},"body":{"injectables/TodosService.html":{}}}],["todos.service",{"_index":196,"title":{},"body":{"components/NavbarComponent.html":{},"components/TodosComponent.html":{}}}],["todos/:status",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["todos/all",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["todos/todos.component",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["todoscomponent",{"_index":55,"title":{"components/TodosComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["todosservice",{"_index":185,"title":{"injectables/TodosService.html":{}},"body":{"components/NavbarComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"coverage.html":{}}}],["todostatus",{"_index":263,"title":{},"body":{"interfaces/Todo.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["todostatus.completed",{"_index":359,"title":{},"body":{"components/TodosComponent.html":{}}}],["todostatus.deleted",{"_index":362,"title":{},"body":{"components/TodosComponent.html":{}}}],["todostatus.favourite",{"_index":361,"title":{},"body":{"components/TodosComponent.html":{}}}],["todotitle",{"_index":383,"title":{},"body":{"injectables/TodosService.html":{}}}],["toggletodostatus",{"_index":375,"title":{},"body":{"injectables/TodosService.html":{}}}],["toggletodostatus(selectedtodo",{"_index":391,"title":{},"body":{"injectables/TodosService.html":{}}}],["token",{"_index":446,"title":{},"body":{"injectables/UsersService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["true",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{},"components/TodoComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undo",{"_index":272,"title":{},"body":{"components/TodoComponent.html":{}}}],["undo():void",{"_index":303,"title":{},"body":{"components/TodoComponent.html":{}}}],["undodeleteevent",{"_index":278,"title":{},"body":{"components/TodoComponent.html":{}}}],["unit",{"_index":524,"title":{},"body":{"index.html":{}}}],["updatetodos",{"_index":376,"title":{},"body":{"injectables/TodosService.html":{}}}],["updatetodos(todo",{"_index":394,"title":{},"body":{"injectables/TodosService.html":{}}}],["urltree",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":516,"title":{},"body":{"index.html":{}}}],["user",{"_index":178,"title":{"interfaces/User.html":{}},"body":{"components/NavbarComponent.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["user.username",{"_index":211,"title":{},"body":{"components/NavbarComponent.html":{}}}],["username",{"_index":159,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["usersservice",{"_index":123,"title":{"injectables/UsersService.html":{}},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["validators",{"_index":233,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":238,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(5",{"_index":243,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.pattern('[a",{"_index":239,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":237,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["variable",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":558,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":498,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":528,"title":{},"body":{"index.html":{}}}],["void",{"_index":162,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["want",{"_index":308,"title":{},"body":{"components/TodoComponent.html":{}}}],["works",{"_index":222,"title":{},"body":{"components/NotfoundComponent.html":{},"components/TodoDetailsComponent.html":{}}}],["z0",{"_index":241,"title":{},"body":{"components/RegisterComponent.html":{}}}],["za",{"_index":240,"title":{},"body":{"components/RegisterComponent.html":{}}}],["zone.js",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'myTodoList'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'myTodoList';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'},{'name': 'TodoDetailsComponent', 'selector': 'app-todo-details'},{'name': 'TodosComponent', 'selector': 'app-todos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotfoundComponent\n\nNotfoundComponent\n\nAppModule -->\n\nNotfoundComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTodoComponent\n\nTodoComponent\n\nAppModule -->\n\nTodoComponent->AppModule\n\n\n\n\n\nTodoDetailsComponent\n\nTodoDetailsComponent\n\nAppModule -->\n\nTodoDetailsComponent->AppModule\n\n\n\n\n\nTodosComponent\n\nTodosComponent\n\nAppModule -->\n\nTodosComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NotfoundComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            TodoComponent\n                        \n                        \n                            TodoDetailsComponent\n                        \n                        \n                            TodosComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { TodosComponent } from './todos/todos.component';\nimport { TodoDetailsComponent } from './todo-details/todo-details.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { RegisterComponent } from './register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoComponent,\n    TodosComponent,\n    TodoDetailsComponent,\n    NavbarComponent,\n    LoginComponent,\n    NotfoundComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { LoginComponent } from './login/login.component';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { RegisterComponent } from './register/register.component';\nimport { TodoDetailsComponent } from './todo-details/todo-details.component';\nimport { TodosComponent } from './todos/todos.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'todos', redirectTo: 'todos/all', pathMatch: 'full'},\n  { path: 'todos/:status', component: TodosComponent, canActivate: [AuthGuard] },\n  { path: 'todo/:id', component: TodoDetailsComponent, canActivate: [AuthGuard] },\n  { path: '**', component: NotfoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_usersService: UsersService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.guard.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UsersService } from './users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private _usersService: UsersService, private _router: Router) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    if (this._usersService.isLoggedIn()) {\n      return true;\n    }\n    else {\n      alert('You are not logged in')\n      this._router.navigate(['/', 'login']);\n      return false;\n    }\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_UsersService: UsersService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _UsersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  username: string = '';\n  password: string = '';\n\n  constructor(private _UsersService: UsersService, private _router: Router) {\n\n  }\n  login() {\n    this._UsersService.login(this.username, this.password).subscribe((res:any) => {\n      this._UsersService.AuthenticateUser();\n      this._router.navigate(['/', 'todos', 'all']);\n      localStorage.setItem('token',res.token);\n    },\n      (err) => {\n        alert('Please enter username and password');\n        console.log(err)\n      });\n  }\n}\n\n    \n\n    \n        \n    \n        \n            username\n            \n        \n        Password\n        \n        login\n    \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        username                            Password                login    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'},{'name': 'TodoDetailsComponent', 'selector': 'app-todo-details'},{'name': 'TodosComponent', 'selector': 'app-todos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLogin\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                showCompeleted\n                            \n                            \n                                showDeleted\n                            \n                            \n                                showFav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UsersService, _router: Router, _todoService: TodosService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _todoService\n                                                  \n                                                        \n                                                                        TodosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showCompeleted\n                        \n                    \n                \n            \n            \n                \nshowCompeleted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleted\n                        \n                    \n                \n            \n            \n                \nshowDeleted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFav\n                        \n                    \n                \n            \n            \n                \nshowFav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TodoFilter } from '../lib';\nimport { TodosService } from '../todos.service';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n  isLogin: boolean = false;\n  user: any;\n  constructor(private _userService: UsersService, private _router: Router, private _todoService: TodosService) {\n    this._userService.loggedIn$.subscribe((res) => {\n      this.isLogin = res\n    })\n\n    this._userService.getUser().subscribe(res => {      \n      this.user = res;\n    })\n    \n  }\n\n  showFav() {\n    this._todoService.setFilter(TodoFilter.FAVOURITE)\n    this._router.navigate(['/todos/favourite'])\n  }\n  showDeleted() {\n    this._todoService.setFilter(TodoFilter.DELETED)\n    this._router.navigate(['/todos/deleted'])\n  }\n  showCompeleted() {\n    this._todoService.setFilter(TodoFilter.COMPLETED)\n    this._router.navigate(['/todos/compeleted'])\n  }\n\n  register() {\n    this._router.navigate(['/register'])\n  }\n  logout() {\n    this._userService.logout()\n    this._router.navigate(['/'])\n  }\n}\n\n    \n\n    \n        \n    \n        \n             Register\n             Login\n        \n        Log Out\n        \n\n            \n                \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \n                    {{user.userName}}\n                \n            \n\n            \n                \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                .myNav {\n  background-color: rgba(219, 209, 209, 0.15);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                         Register             Login                Log Out                                                                                                                                                                                                                                                                                            {{user.userName}}                                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'},{'name': 'TodoDetailsComponent', 'selector': 'app-todo-details'},{'name': 'TodosComponent', 'selector': 'app-todos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotfoundComponent.html":{"url":"components/NotfoundComponent.html","title":"component - NotfoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotfoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notfound/notfound.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notfound\n            \n\n            \n                styleUrls\n                ./notfound.component.css\n            \n\n\n\n            \n                templateUrl\n                ./notfound.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent {\n\n}\n\n    \n\n    \n        notfound works!\n\n    \n\n    \n                \n                    ./notfound.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'notfound works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'},{'name': 'TodoDetailsComponent', 'selector': 'app-todo-details'},{'name': 'TodosComponent', 'selector': 'app-todos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotfoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                regForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_usersService: UsersService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(regForm: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    regForm\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        regForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  regForm: FormGroup;\n  constructor(private _usersService: UsersService, private _router: Router) {\n    this.regForm = new FormGroup({\n      userName: new FormControl(null, [Validators.required, Validators.minLength(3)]),\n      password: new FormControl(null, [Validators.required, Validators.pattern('[a-zA-Z0-9]*'), Validators.minLength(5)]),\n      quote: new FormControl(null, [Validators.required]),\n    })\n\n  }\n  registerUser(regForm: FormGroup) {\n    console.log(regForm.value);\n\n    this._usersService.register(regForm.value).subscribe(\n      (res) => {\n        this._router.navigate(['/login'])\n      },\n      (err) => {\n        console.log(err.error)\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n    \n        Username\n        \n        Password\n        \n        Quote\n        \n        register\n    \n\n    \n\n    \n                \n                    ./register.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Username                Password                Quote                register    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'},{'name': 'TodoDetailsComponent', 'selector': 'app-todo-details'},{'name': 'TodosComponent', 'selector': 'app-todos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Todo.html":{"url":"interfaces/Todo.html","title":"interface - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Todo {\n  readonly _id: number;\n  title: string;\n  status: {\n    completed: boolean;\n    favourite: boolean;\n    deleted: boolean;\n  };\n}\nexport interface User {\n  readonly id: number;\n  username: string;\n  quote: string;\n  loggedIn: boolean;\n  password: string;\n}\n\nexport enum TodoFilter {\n  ALL = 'all',\n  FAVOURITE = 'favourite ',\n  COMPLETED = 'completed',\n  DELETED = 'deleted',\n}\n\nexport enum TodoStatus {\n \n  FAVOURITE = 'favourite',\n  COMPLETED = 'completed',\n  DELETED = 'deleted',\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoComponent.html":{"url":"components/TodoComponent.html","title":"component - TodoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TodoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/todo/todo.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todo\n            \n\n            \n                styleUrls\n                ./todo.component.css\n            \n\n\n\n            \n                templateUrl\n                ./todo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                openDeleteModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                completeTodo\n                            \n                            \n                                confirmRemoveTodo\n                            \n                            \n                                favTodo\n                            \n                            \n                                removeTodo\n                            \n                            \n                                undo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                todo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                completeTodoEvent\n                            \n                            \n                                deleteTodoEvent\n                            \n                            \n                                favouriteTodoEvent\n                            \n                            \n                                undoDeleteEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/todo/todo.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        todo\n                    \n                \n                \n                    \n                        Type :         Todo\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/todo/todo.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        completeTodoEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/todo/todo.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deleteTodoEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/todo/todo.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        favouriteTodoEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/todo/todo.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        undoDeleteEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/todo/todo.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        completeTodo\n                        \n                    \n                \n            \n            \n                \ncompleteTodo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo/todo.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmRemoveTodo\n                        \n                    \n                \n            \n            \n                \nconfirmRemoveTodo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo/todo.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favTodo\n                        \n                    \n                \n            \n            \n                \nfavTodo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo/todo.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTodo\n                        \n                    \n                \n            \n            \n                \nremoveTodo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo/todo.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        undo\n                        \n                    \n                \n            \n            \n                \nundo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo/todo.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/todo/todo.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Todo } from '../lib';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent {\n  \n openDeleteModal:boolean = false;\n constructor(){\n  \n }\n  @Input()todo!:Todo;\n  @Output() deleteTodoEvent = new EventEmitter();\n  @Output() completeTodoEvent = new EventEmitter();\n  @Output() favouriteTodoEvent = new EventEmitter();\n  @Output() undoDeleteEvent = new EventEmitter();\n\n  confirmRemoveTodo():void {\n    this.openDeleteModal = true;\n  }\n\n  removeTodo():void{    \n    this.deleteTodoEvent.emit(this.todo._id); \n  }\n\n  completeTodo():void{\n    this.completeTodoEvent.emit(this.todo._id); \n  }  \n  favTodo():void{\n    this.favouriteTodoEvent.emit(this.todo._id); \n  }\n\n  undo():void{\n    this.undoDeleteEvent.emit(this.todo);\n  }\n}\n\n\n    \n\n    \n        \n\n  \n  {{ todo.title }} \n\n  \n\n    \n       \n\n    \n    \n      Delete\n    \n  \n\n\n\n\n\n  \n    \n      \n        {{todo.title}}\n        \n      \n      \n        Are you sure you want to delete this item?\n      \n      \n        Close\n        Delete Todo\n      \n    \n  \n\n\n\n\n  \n    \n      \n        \n      \n      \n         {{todo.title}} task has bees deleted successfuly .\n      \n      \n        Close\n        Undo -->\n      \n    \n  \n\n    \n\n    \n                \n                    ./todo.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ todo.title }}                            Delete                          {{todo.title}}                            Are you sure you want to delete this item?                    Close        Delete Todo                                                     {{todo.title}} task has bees deleted successfuly .                    Close        Undo -->            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'},{'name': 'TodoDetailsComponent', 'selector': 'app-todo-details'},{'name': 'TodosComponent', 'selector': 'app-todos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoDetailsComponent.html":{"url":"components/TodoDetailsComponent.html","title":"component - TodoDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TodoDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/todo-details/todo-details.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todo-details\n            \n\n            \n                styleUrls\n                ./todo-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./todo-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-todo-details',\n  templateUrl: './todo-details.component.html',\n  styleUrls: ['./todo-details.component.css']\n})\nexport class TodoDetailsComponent {\n\n}\n\n    \n\n    \n        todo-details works!\n\n    \n\n    \n                \n                    ./todo-details.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'todo-details works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'},{'name': 'TodoDetailsComponent', 'selector': 'app-todo-details'},{'name': 'TodosComponent', 'selector': 'app-todos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodosComponent.html":{"url":"components/TodosComponent.html","title":"component - TodosComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TodosComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/todos/todos.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todos\n            \n\n            \n                styleUrls\n                ./todos.component.css\n            \n\n\n\n            \n                templateUrl\n                ./todos.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newTodoTitle\n                            \n                            \n                                todos\n                            \n                            \n                                todoStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                editTodoStatus\n                            \n                            \n                                getTodos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_todosService: TodosService, _activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/todos/todos.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _todosService\n                                                  \n                                                        \n                                                                        TodosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTodo\n                        \n                    \n                \n            \n            \n                \naddTodo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos/todos.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTodoStatus\n                        \n                    \n                \n            \n            \n                \neditTodoStatus(selectedTodo: Todo, status: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos/todos.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedTodo\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodos\n                        \n                    \n                \n            \n            \n                \ngetTodos(filter: TodoFilter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos/todos.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                TodoFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        newTodoTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/todos/todos.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/todos/todos.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todoStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TodoStatus\n\n                    \n                \n                    \n                        \n                                Defined in src/app/todos/todos.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, DoCheck, OnChanges, SimpleChanges } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Todo, TodoFilter, TodoStatus } from '../lib';\nimport { TodosService } from '../todos.service';\n\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.css']\n})\nexport class TodosComponent {\n  todos: Todo[] = [];\n  newTodoTitle: string = '';\n  todoStatus!: TodoStatus;\n\n  constructor(private _todosService: TodosService, private _activatedRoute: ActivatedRoute) {\n    this._todosService.status$.subscribe((res) => {\n      this.getTodos(res)\n    })\n  }\n\n  getTodos(filter: TodoFilter) {\n    this._todosService.getTodos().subscribe({\n      next: (result) => {\n        this.todos = result.data;\n        this.todos = this._todosService.filterTodo(this.todos, filter);\n      }\n    });\n  }\n\n  addTodo() {\n    this._todosService.addTodo(this.newTodoTitle).subscribe({\n      next: (res) => {\n        const { title, status, _id } = res.data\n        this.todos.push({ _id, title, status })\n      },\n      error: (err) => {\n        console.log(err);\n      }\n    });\n\n  }\n\n  editTodoStatus(selectedTodo: Todo, status: string): void {\n    // console.log(selectedTodo);\n\n    switch (status) {\n      case 'completed':\n        this.todoStatus = TodoStatus.COMPLETED\n        break;\n\n      case 'favourite':\n        this.todoStatus = TodoStatus.FAVOURITE\n        break;\n\n      case 'deleted':\n        this.todoStatus = TodoStatus.DELETED;\n        this.getTodos(this._activatedRoute.snapshot.params['status'])\n        break;\n    }\n\n    this._todosService.toggleTodoStatus(selectedTodo, this.todoStatus);\n    this._todosService.updateTodos(selectedTodo).subscribe({\n      next(value) {\n        console.log(value);\n\n      },\n      error(err) {\n        console.log(err);\n\n      },\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n    Add\n  \n  \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./todos.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Add                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'},{'name': 'TodoDetailsComponent', 'selector': 'app-todo-details'},{'name': 'TodosComponent', 'selector': 'app-todos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodosComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodosService.html":{"url":"injectables/TodosService.html","title":"injectable - TodosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TodosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/todos.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                            \n                                status$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                deleteTodoPermanent\n                            \n                            \n                                filterTodo\n                            \n                            \n                                getTodos\n                            \n                            \n                                setFilter\n                            \n                            \n                                toggleTodoStatus\n                            \n                            \n                                updateTodos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/todos.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTodo\n                        \n                    \n                \n            \n            \n                \naddTodo(todoTitle: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todoTitle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTodoPermanent\n                        \n                    \n                \n            \n            \n                \ndeleteTodoPermanent(todo: Todo, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todo\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterTodo\n                        \n                    \n                \n            \n            \n                \nfilterTodo(todos: Todo[], filter: TodoFilter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todos\n                                    \n                                                Todo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                TodoFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Todo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodos\n                        \n                    \n                \n            \n            \n                \ngetTodos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilter\n                        \n                    \n                \n            \n            \n                \nsetFilter(filter: TodoFilter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                TodoFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleTodoStatus\n                        \n                    \n                \n            \n            \n                \ntoggleTodoStatus(selectedTodo: Todo, statusType: TodoStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedTodo\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    statusType\n                                    \n                                                TodoStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTodos\n                        \n                    \n                \n            \n            \n                \nupdateTodos(todo: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todo\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(TodoFilter.ALL)\n                    \n                \n                    \n                        \n                                Defined in src/app/todos.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.status.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/todos.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Todo, TodoFilter, TodoStatus } from './lib';\nimport { environment } from 'src/environments/environment.prod';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TodosService {\n\n  status = new BehaviorSubject(TodoFilter.ALL);\n  status$ = this.status.asObservable();\n\n  constructor(private _http: HttpClient) { }\n\n  addTodo(todoTitle: string) {\n    return this._http.post(`${environment.baseUrl}todos`, { title: todoTitle }, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: `${localStorage.getItem('token')}`\n      })\n    })\n  }\n\n  getTodos() {\n    return this._http.get(`${environment.baseUrl}todos`, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: `${localStorage.getItem('token')}`\n      })\n    })\n  }\n\n  updateTodos(todo: Todo) {\n    return this._http.patch(`${environment.baseUrl}todos/${todo._id}`, { status: todo.status }, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: `${localStorage.getItem('token')}`\n      })\n    })\n  }\n\n  toggleTodoStatus(selectedTodo: Todo, statusType: TodoStatus) {\n    console.log(\"toggle\",selectedTodo ,statusType);\n    selectedTodo.status[statusType] = !selectedTodo.status[statusType];\n  }\n\n  setFilter(filter: TodoFilter) {\n    this.status.next(filter)\n  }\n\n  filterTodo(todos: Todo[], filter: TodoFilter): Todo[] {\n    return todos.filter(\n      (todo) => {\n        switch (filter) {\n          case TodoFilter.COMPLETED:\n            return todo.status.completed && !todo.status.deleted\n          case TodoFilter.FAVOURITE:\n            return todo.status.favourite && !todo.status.deleted\n          case TodoFilter.DELETED:\n            return todo.status.deleted\n          case TodoFilter.ALL:\n            return !todo.status.deleted\n        }\n      });\n  }\n\n  deleteTodoPermanent(todo: Todo, id: number) {\n    return this._http.delete(`${environment.baseUrl}/todos/${id}}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            loggedIn\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            quote\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loggedIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loggedIn:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quote\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quote:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Todo {\n  readonly _id: number;\n  title: string;\n  status: {\n    completed: boolean;\n    favourite: boolean;\n    deleted: boolean;\n  };\n}\nexport interface User {\n  readonly id: number;\n  username: string;\n  quote: string;\n  loggedIn: boolean;\n  password: string;\n}\n\nexport enum TodoFilter {\n  ALL = 'all',\n  FAVOURITE = 'favourite ',\n  COMPLETED = 'completed',\n  DELETED = 'deleted',\n}\n\nexport enum TodoStatus {\n \n  FAVOURITE = 'favourite',\n  COMPLETED = 'completed',\n  DELETED = 'deleted',\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loggedIn\n                            \n                            \n                                loggedIn$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AuthenticateUser\n                            \n                            \n                                getUser\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/users.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        AuthenticateUser\n                        \n                    \n                \n            \n            \n                \nAuthenticateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userName: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(formValues: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formValues\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/users.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedIn$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.loggedIn.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/users.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  loggedIn = new BehaviorSubject(false)\n  loggedIn$ = this.loggedIn.asObservable();\n\n  constructor(private _http: HttpClient) { }\n\n  register(formValues: { userName: string, password: string, quote: string }) {\n    return this._http.post(`${environment.baseUrl}users`, formValues)\n  }\n\n  login(userName: string, password: string) {\n    return this._http.post(`${environment.baseUrl}users/signin`, { userName, password })\n  }\n\n  isLoggedIn(): boolean {\n    return this.loggedIn.getValue()\n  }\n\n  AuthenticateUser() {\n    this.loggedIn.next(true);\n  }\n\n  logout() {\n    this.loggedIn.next(false);\n  }\n\n  getUser() {\n    let token: any = localStorage.getItem('token');    \n    const httpOptions = {\n      headers: new HttpHeaders().set(\"Authorization\", token)\n    };\n    return this._http.get(`${environment.baseUrl}users`, httpOptions)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib.ts\n            \n            interface\n            Todo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/lib.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/notfound/notfound.component.ts\n            \n            component\n            NotfoundComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/todo-details/todo-details.component.ts\n            \n            component\n            TodoDetailsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/todo/todo.component.ts\n            \n            component\n            TodoComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/todos.service.ts\n            \n            injectable\n            TodosService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/todos/todos.component.ts\n            \n            component\n            TodosComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            bootstrap : ^5.2.3\n        \n            bootstrap-icons : ^1.10.3\n        \n            popper.js : ^1.16.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TodoFilter   (src/.../lib.ts)\n                        \n                        \n                            TodoStatus   (src/.../lib.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/lib.ts\n    \n        \n            \n                \n                    \n                        \n                        TodoFilter\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : all\n                            \n                        \n                        \n                            \n                                 FAVOURITE\n                            \n                        \n                        \n                            \n                                Value : favourite \n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n                        \n                            \n                                Value : deleted\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TodoStatus\n                    \n                \n                        \n                            \n                                 FAVOURITE\n                            \n                        \n                        \n                            \n                                Value : favourite\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n                        \n                            \n                                Value : deleted\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMyTodoList\nThis project was generated with Angular CLI version 15.2.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\nToDoList_project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotfoundComponent\n\nNotfoundComponent\n\nAppModule -->\n\nNotfoundComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTodoComponent\n\nTodoComponent\n\nAppModule -->\n\nTodoComponent->AppModule\n\n\n\n\n\nTodoDetailsComponent\n\nTodoDetailsComponent\n\nAppModule -->\n\nTodoDetailsComponent->AppModule\n\n\n\n\n\nTodosComponent\n\nTodosComponent\n\nAppModule -->\n\nTodosComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  baseUrl: \"http://localhost:3000/\"\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  baseUrl: \"http://localhost:3000/\"\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
